name: Build & deploy
on:
  create:
    tags:
      - "dev/*.*-dev*"
      - "rc/*.*-rc*"
      - "release/*.*"

jobs:
  create_release:
    name: Setup outputs
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build-windows:
    name: Build windows release
    runs-on: windows-2019
    needs: [create_release]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          lfs: true
      - name: Build
        shell: cmd
        run: build.bat
      - name: Upload windows artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: artifacts/lua-module-windows.zip
          asset_name: lua-module-windows.zip
          asset_content_type: application/zip
  build-linux:
    name: Build linux release
    runs-on: ubuntu-18.04
    needs: [create_release]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          lfs: true
      - name: Build
        run: ./build.sh
      - name: Upload linux artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: artifacts/lua-module-linux.zip
          asset_name: lua-module-linux.zip
          asset_content_type: application/zip
  publish-artifacts:
    name: Publish Lua modules
    runs-on: windows-2019
    steps:
      - name: Zipping Lua modules
        shell: cmd
        run: |
          if not exist "lua-module\modules" mkdir "lua-module\modules"
          if not exist "artifacts" mkdir artifacts
          cd scripts
          FOR /D %%G in (*) DO (
            echo Try to 7Zip the following folder: %%~nxG
            7z a -tzip "lua-%%G-module.zip" -r %%G
            move /Y "lua-%%G-module.zip" ..\artifacts
          )
      - name: Uploading Lua modules artifact
        uses: csexton/release-asset-action@v2
        with:
          pattern: artifacts/lua-*-module.zip
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-url: ${{ needs.create_release.outputs.upload_url }}
        
