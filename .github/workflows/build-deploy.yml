name: Build & deploy
on:
  push:
    tags:
      - "server/*.*"
      - "client/*.*"

jobs:
  create_release:
    name: Setup outputs
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build-windows-server:
    name: Build Windows server release
    runs-on: windows-2019
    needs: [create_release]
    if: startsWith(github.ref, 'refs/tags/server')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          lfs: true
      - name: Build
        shell: cmd
        run: build_server_win.bat
      - name: Upload Windows artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: artifacts/lua-server-module-windows.zip
          asset_name: lua-server-module-windows.zip
          asset_content_type: application/zip
  build-linux-server:
    name: Build Linux server release
    runs-on: ubuntu-18.04
    needs: [create_release]
    if: startsWith(github.ref, 'refs/tags/server')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          lfs: true
      - name: Build
        run: ./build_server_linux.sh
      - name: Upload linux artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: artifacts/lua-server-module-linux.zip
          asset_name: lua-server-module-linux.zip
          asset_content_type: application/zip
  build-windows-client:
    name: Build Windows client release
    runs-on: windows-2019
    needs: [create_release]
    if: startsWith(github.ref, 'refs/tags/client')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          lfs: true
      - name: Build
        shell: cmd
        run: build_client_win.bat
      - name: Upload Windows client module
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: artifacts/lua-client-module.zip
          asset_name: lua-client-module.zip
          asset_content_type: application/zip
      - name: Upload Windows client library
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: artifacts/lua-client-module-static.zip
          asset_name: lua-client-module-static.zip
          asset_content_type: application/zip
  publish-artifacts:
    name: Publish Lua modules
    runs-on: windows-2019
    needs: [create_release]
    if: startsWith(github.ref, 'refs/tags/server')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          lfs: true
      - name: Zipping Lua modules
        shell: cmd
        run: |
          if not exist "artifacts" mkdir artifacts
          echo %CD%
          dir
          cd .\scripts
          FOR /D %%G in (*) DO (
            echo Try to 7Zip the following folder: %%~nxG
            7z a -tzip "%%G-module.zip" -r %%G
            move /Y "%%G-module.zip" ..\artifacts
          )
      - name: Uploading Lua modules artifact
        uses: csexton/release-asset-action@v2
        with:
          release-url: ${{ needs.create_release.outputs.upload_url }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: "artifacts/*-module.zip"
        
